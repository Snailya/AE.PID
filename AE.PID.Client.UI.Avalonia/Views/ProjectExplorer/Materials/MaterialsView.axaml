<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:AE.PID.Client.UI.Avalonia"
             xmlns:shared="clr-namespace:AE.PID.Client.UI.Avalonia.Shared;assembly=AE.PID.Client.UI.Avalonia.Shared"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="AE.PID.Client.UI.Avalonia.MaterialsView"
             x:DataType="local:MaterialsViewModel">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <local:MaterialsViewModel />
    </Design.DataContext>

    <UserControl.KeyBindings>
        <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyMaterial}" />
    </UserControl.KeyBindings>

    <DockPanel>
        <StackPanel Classes="actions"
                    DockPanel.Dock="Top" Margin="0 0 0 4">
            <StackPanel Orientation="Horizontal"
                        IsVisible="{Binding Path=ItemCount, ElementName=Tags, Mode=OneWay,Converter={x:Static local:SimpleConverters.NotZero}}">
                <TextBlock Text="组标签: " VerticalAlignment="Center" />
                <ItemsControl Name="Tags" ItemsSource="{Binding GroupDescriptions}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="local:ByGroupViewModel">
                            <shared:Tag Content="{Binding Name}"
                                        OnClose="{Binding  $parent[ItemsControl].((local:MaterialsViewModel)DataContext).RemoveGroupDescription}">
                                <shared:Tag.CloseIcon>
                                    <PathIcon Data="{StaticResource dismiss_regular}" />
                                </shared:Tag.CloseIcon>
                            </shared:Tag>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
            <TextBox Text="{Binding SearchText}" Watermark="搜索" Width="128" />
            <SplitButton
                Content="导出"
                Command="{Binding Export}"
                CommandParameter="{x:Static local:OutputType.Page}">
                <SplitButton.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuItem Header="导出到Excel"
                                  Command="{Binding Export}"
                                  CommandParameter="{x:Static local:OutputType.Excel}" />
                    </MenuFlyout>
                </SplitButton.Flyout>
            </SplitButton>
            <Button Content="同步" IsEnabled="False" Command="{Binding Sync}" />
        </StackPanel>

        <Grid>
            <shared:LoadingIndicator IsLoading="{Binding IsLoading}" />
            <SplitView
                Margin="0 4 0 0"
                IsPaneOpen="{Binding IsMaterialVisible}"
                DisplayMode="Overlay"
                PanePlacement="Right">
                <DataGrid SelectionMode="Extended" FrozenColumnCount="1"
                          CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True"
                          ItemsSource="{Binding Locations}"
                          SelectedItem="{Binding SelectedLocation}">
                    <DataGrid.KeyBindings>
                        <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyMaterial}"
                                    CommandParameter="{Binding SelectedLocation}" />
                        <KeyBinding Gesture="Ctrl+V" Command="{Binding PasteMaterial}"
                                    CommandParameter="{Binding SelectedLocation}" />
                    </DataGrid.KeyBindings>
                    <DataGrid.Styles>
                        <Style Selector="DataGridRow">
                            <Setter Property="ContextMenu">
                                <ContextMenu x:DataType="local:MaterialLocationViewModel">
                                    <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                    <MenuItem Header="定位"
                                              Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).Locate}"
                                              CommandParameter="{Binding }" />
                                    <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                    <MenuItem Header="复制"
                                              Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).CopyMaterial}"
                                              CommandParameter="{Binding }" />

                                    <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                    <MenuItem
                                        Header="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).Clipboard, Converter={x:Static local:SimpleConverters.FormatPasteCommandLabel}}"
                                        Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).PasteMaterial}"
                                        CommandParameter="{Binding  }" />
                                </ContextMenu>
                            </Setter>
                        </Style>
                        <Style Selector="DataGridColumnHeader">
                            <Setter Property="ContextMenu">
                                <ContextMenu x:DataType="local:MaterialLocationViewModel">
                                    <MenuItem
                                        Header="{Binding $parent[DataGridColumnHeader].Content, StringFormat='组: {0}'}"
                                        Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).AddGroupDescription}"
                                        CommandParameter="{Binding $parent[DataGridColumnHeader], Converter={x:Static local:SimpleConverters.DataGridColumnHeaderToBindingPath}}" />
                                </ContextMenu>
                            </Setter>
                        </Style>
                    </DataGrid.Styles>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                    <CheckBox
                                        IsVisible="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).SelectedLocations.Count, TargetNullValue=False}"
                                        IsChecked="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).SelectedLocations.Count, TargetNullValue=False}"
                                        Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).ClearSelection}"
                                        HorizontalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.HeaderTemplate>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                              IsEnabled="{Binding IsEnabled}"
                                              x:DataType="local:MaterialLocationViewModel"
                                              HorizontalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="工艺区域" Binding="{Binding ProcessArea}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="功能单元" Binding="{Binding FunctionalGroup}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="功能元件" Binding="{Binding FunctionalElement}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="类型" Binding="{Binding MaterialType}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="描述" IsReadOnly="False"
                                            Binding="{Binding Description, UpdateSourceTrigger=LostFocus}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="备注" IsReadOnly="False"
                                            Binding="{Binding Remarks, UpdateSourceTrigger=LostFocus}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="关键参数" Binding="{Binding KeyParameters}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="数量" IsReadOnly="False"
                                            Binding="{Binding Quantity, UpdateSourceTrigger=LostFocus}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTextColumn Header="合计数量" Binding="{Binding ComputedQuantity}"
                                            x:DataType="local:MaterialLocationViewModel" />
                        <DataGridTemplateColumn Header="物料号">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate x:DataType="local:MaterialLocationViewModel">
                                    <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                    <Button Classes="link"
                                            IsVisible="{Binding MaterialCode, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                            Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).LoadMaterial}"
                                            CommandParameter="{Binding}">
                                        <TextBlock TextDecorations="Underline"
                                                   Text="{Binding MaterialCode, UpdateSourceTrigger=LostFocus}" />
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="操作">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate x:DataType="local:MaterialLocationViewModel">
                                    <StackPanel Classes="actions">
                                        <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                        <Button Content="选择"
                                                IsEnabled="{Binding IsEnabled}"
                                                Command="{Binding $parent[DataGrid].((local:MaterialsViewModel)DataContext).SelectMaterial}"
                                                CommandParameter="{Binding .}" />
                                        <!-- ReSharper disable once Xaml.PossibleNullReferenceException -->
                                        <Button Content="清除"
                                                IsEnabled="{Binding MaterialCode, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                                Command="{Binding  $parent[DataGrid].((local:MaterialsViewModel)DataContext).DeleteMaterial}"
                                                CommandParameter="{Binding .}" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <SplitView.Pane>
                    <local:MaterialView DataContext="{Binding Material}" />
                </SplitView.Pane>
            </SplitView>
        </Grid>
    </DockPanel>

</UserControl>