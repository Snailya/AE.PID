<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:AE.PID.Client.UI.Avalonia"
             xmlns:shared="clr-namespace:AE.PID.Client.UI.Avalonia.Shared;assembly=AE.PID.Client.UI.Avalonia.Shared"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="AE.PID.Client.UI.Avalonia.FunctionsView"
             x:DataType="vm:FunctionsViewModel">
    <UserControl.Styles>
        <Style Selector="Border.icon">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2 0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="CornerRadius" Value="2" />
        </Style>
        <Style Selector="Border.icon > TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
    </UserControl.Styles>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:FunctionsViewModel />
    </Design.DataContext>

    <DockPanel>
        <Grid DockPanel.Dock="Left">
            <shared:LoadingIndicator IsLoading="{Binding IsLoading}" />
            <TreeView MinWidth="240"
                      ItemsSource="{Binding Locations}"
                      SelectedItem="{Binding SelectedLocation}">
                <TreeView.Styles>
                    <Style Selector="TreeViewItem" x:DataType="vm:FunctionLocationTreeItemViewModel">
                        <Setter Property="IsSelected"
                                Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded"
                                Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.Styles>
                <TreeView.ItemTemplate>
                    <TreeDataTemplate ItemsSource="{Binding Inferiors}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding NodeName}"
                                       Foreground="{Binding IsOptional, Converter={x:Static vm:SimpleConverters.FunctionGroupOptionalToTextColor}}"
                                       VerticalAlignment="Center" />
                            <Border Classes="icon"
                                    IsVisible="{Binding IsProxy}" Background="LightSteelBlue">
                                <TextBlock Text="代" />
                            </Border>
                            <Border Classes="icon"
                                    IsVisible="{Binding IsVirtual}" Background="LightGoldenrodYellow">
                                <TextBlock Text="虚" />
                            </Border>
                        </StackPanel>
                    </TreeDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>

        <vm:FunctionKanbanView DataContext="{Binding Kanban}"
                               IsVisible="{Binding Location, Converter={x:Static ObjectConverters.IsNotNull}}" />
    </DockPanel>
</UserControl>