; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "AE PID"
#define MyAppVersion GetVersionNumbersString(".\bin\Release\AE.PID.dll")
#define MyAppPublisher "AE"
#define Description "中汽涂装装备原理图设计工具"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{6EC950E3-FB0E-4F91-BFA4-0721E17F1293}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputDir=..\publish
OutputBaseFilename={#MyAppName}_{#MyAppVersion}
Compression=lzma
SolidCompression=yes
WizardStyle=modern
CloseApplications=yes
Uninstallable=yes
UninstallDisplayName={#MyAppName}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: ".\bin\Release\*"; DestDir: "{app}"; Excludes: "*.pdb";Flags: ignoreversion recursesubdirs createallsubdirs
Source: "..\3rd\SourceHanSansSC-Regular.otf"; DestDir: "{autofonts}"; FontInstall: "Source Han Sans SC"; Flags: onlyifdoesntexist uninsneveruninstall
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKA64; Subkey: "Software\Microsoft\Visio\Addins\AE.PID"; Flags: uninsdeletekey
Root: HKA64; Subkey: "Software\Microsoft\Visio\Addins\AE.PID"; ValueType: string; ValueName: "Description"; ValueData: "{#Description}"
Root: HKA64; Subkey: "Software\Microsoft\Visio\Addins\AE.PID"; ValueType: string; ValueName: "FriendlyName"; ValueData: "{#MyAppName}"
Root: HKA64; Subkey: "Software\Microsoft\Visio\Addins\AE.PID"; ValueType: dword; ValueName: "LoadBehavior"; ValueData: "3"
Root: HKA64; Subkey: "Software\Microsoft\Visio\Addins\AE.PID"; ValueType: string; ValueName: "Manifest"; ValueData: "file:///{app}\AE.PID.vsto|vstolocal"

;[Code]
;function VstoRuntimeInstalled: Boolean;
;var
;  RegKey: String;
;begin
;  // 定义VSTO运行时在注册表中的位置
;  RegKey := 'Software\Microsoft\VSTO Runtime Setup\v4R';
  
;  // 检查注册表中是否存在VSTO运行时的安装信息
;  Result := RegKeyExists(HKEY_LOCAL_MACHINE, RegKey) or RegKeyExists(HKEY_CURRENT_USER, RegKey);
;end;

;function VstoRuntimeAvailability: Boolean;
;var
;  Version: String;
;begin
;  // 获取 VSTO 2010 运行时的版本号
;  if RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\Microsoft\VSTO Runtime Setup\v4R', 'Version', Version) then
;  begin
;    // 如果版本号大于等于 10.0.30319，则认为可用
;    if CompareStr(Version, '10.0.30319') >= 0 then
;      Result := True
;    else
;      Result := False;
;  end
;  else
;  begin
;    // 如果无法获取版本号，则认为不可用
;    Result := False;
;  end;
;end;

;function InitializeSetup: Boolean;
;begin
;  // 检查是否已安装VSTO运行时
;  if not VstoRuntimeInstalled or not VstoRuntimeAvailability then
;  begin
;    // 如果未安装VSTO运行时，显示错误消息并终止安装
;    MsgBox('Please install the VSTO runtime before proceeding with the installation.', mbError, MB_OK);
;    Result := False;
;    Exit;
;  end;

;  // 如果已安装VSTO运行时，允许继续安装
;  Result := True;
;end;