<views:ViewBase x:Class="AE.PID.Views.BOM.ExportView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:viewModels="clr-namespace:AE.PID.ViewModels"
                xmlns:converters="clr-namespace:AE.PID.Converters"
                xmlns:views="clr-namespace:AE.PID.Views"
                xmlns:local="clr-namespace:AE.PID.Views.BOM"
                mc:Ignorable="d"
                x:TypeArguments="viewModels:ExportViewModel"
                MinHeight="320" MinWidth="800" Height="640"
                d:DataContext="{d:DesignInstance Type=viewModels:ExportViewModel}"
                d:DesignHeight="320" d:DesignWidth="800">
    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Margin="4 4 4 4" FontSize="28" Text="导出" />
        <local:DocumentInfoControl Grid.Row="1" x:Name="DocumentInfo" />
        <local:TreeListView Grid.Row="2" x:Name="BillsOfMaterials" BorderThickness="2">
            <local:TreeListView.Resources>
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Width" Value="19" />
                    <Setter Property="Height" Value="13" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Width="19" Height="13" Background="Transparent">
                                    <Border Width="9" Height="9" BorderThickness="1" BorderBrush="#FF7898B5"
                                            CornerRadius="1" SnapsToDevicePixels="true">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="White" Offset=".2" />
                                                    <GradientStop Color="#FFC0B7A6" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Path x:Name="ExpandPath" Margin="1,1,1,1" Fill="Black"
                                              Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Data" TargetName="ExpandPath"
                                                Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <converters:LevelToIndentConverter x:Key="LevelToIndentConverter" />
                <DataTemplate x:Key="CellTemplate" DataType="{x:Type viewModels:ElementViewModel}">
                    <DockPanel>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                                      Margin="{Binding Level,
                             Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
                                      ClickMode="Press" />
                        <TextBlock Text="{Binding Name}" />
                    </DockPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding Path=HasItems,RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}}"
                            Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
                <GridViewColumnCollection x:Key="GridViewColumnCollection">
                    <GridViewColumn Header="形状ID" DisplayMemberBinding="{Binding Id}" Width="60" />
                    <GridViewColumn Header="名称" CellTemplate="{StaticResource CellTemplate}" />
                    <GridViewColumn Header="功能组" DisplayMemberBinding="{Binding FunctionalGroup}" Width="60" />
                    <GridViewColumn Header="功能元件" DisplayMemberBinding="{Binding FunctionalElement}" Width="120" />
                    <GridViewColumn Header="物料号" DisplayMemberBinding="{Binding MaterialNo}" Width="120" />
                    <GridViewColumn Header="数量" DisplayMemberBinding="{Binding Count}" Width="60" />
                </GridViewColumnCollection>

                <Style TargetType="{x:Type local:TreeListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
                                <StackPanel>
                                    <Border Name="Bd"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}">
                                        <GridViewRowPresenter x:Name="PART_Header"
                                                              Content="{TemplateBinding Header}"
                                                              Columns="{StaticResource GridViewColumnCollection}" />
                                    </Border>

                                    <ItemsPresenter x:Name="ItemsHost" />
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Width" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="HasHeader" Value="false" />
                                            <Condition Property="Height" Value="Auto" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd" Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type local:TreeListView}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type local:TreeListView}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <DockPanel>
                                        <GridViewHeaderRowPresenter Columns="{StaticResource GridViewColumnCollection}"
                                                                    DockPanel.Dock="Top" />
                                        <Border BorderThickness="1">
                                            <ScrollViewer>
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </Border>
                                    </DockPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </local:TreeListView.Resources>
            <local:TreeListView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Inferiors}"
                                          DataType="{x:Type viewModels:ElementViewModel}">
                    <Border BorderThickness="2" BorderBrush="Yellow" CornerRadius="0" Margin="1" x:Name="back"
                            MinWidth="70"
                            DataContext="{Binding}">
                        <StackPanel Orientation="Horizontal" Margin="2">
                            <TextBlock Text="{Binding Text}" Margin="2 0" />
                        </StackPanel>
                    </Border>
                </HierarchicalDataTemplate>
            </local:TreeListView.ItemTemplate>
        </local:TreeListView>
        <Separator Grid.Row="3" />
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="4">
            <Button x:Name="SubmitButton" Margin="8 8 4 4" MinWidth="64" Content="确定" />
            <Button x:Name="CancelButton" Margin="4 8 8 4" MinWidth="64" Content="取消" />
        </StackPanel>
    </Grid>
</views:ViewBase>