<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AE.PID.Views.Controls"
                    xmlns:viewModels="clr-namespace:AE.PID.ViewModels"
                    xmlns:converters="clr-namespace:AE.PID.Converters">

    <Style x:Key="TitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="FontSize" Value="28" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Width" Value="64" />
    </Style>

    <Style TargetType="{x:Type controls:LabelTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LabelTextBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            MinWidth="64"
                            Text="{TemplateBinding Label}" Margin="4,0" VerticalAlignment="Center" />
                        <TextBox Grid.Column="1"
                                 Text="{Binding  RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="4,0" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:SectionLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SectionLabel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Content="{TemplateBinding Header}" />
                        <Separator Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeListViewItemCellExpander" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="19" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19" Height="13" Background="Transparent">
                        <Border Width="9" Height="9" BorderThickness="1" BorderBrush="#FF7898B5"
                                CornerRadius="1" SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White" Offset=".2" />
                                        <GradientStop Color="#FFC0B7A6" Offset="1" />
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath" Margin="1,1,1,1" Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <converters:LevelToIndentConverter x:Key="TreeListViewItemLevelToIndentConverter" />
    <DataTemplate x:Key="ExpandableTreeListViewItemCell" DataType="{x:Type viewModels:ElementViewModel}">
        <DockPanel>
            <ToggleButton x:Name="Expander" Style="{StaticResource TreeListViewItemCellExpander}"
                          Margin="{Binding Level,
                             Converter={StaticResource TreeListViewItemLevelToIndentConverter},
                             RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}"
                          IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}"
                          ClickMode="Press" />
            <TextBlock Text="{Binding Name}" />
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger
                Binding="{Binding Path=HasItems,
                RelativeSource={RelativeSource AncestorType={x:Type controls:TreeListViewItem}}}"
                Value="False">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <GridViewColumnCollection x:Key="TreeListViewColumns">
        <GridViewColumn Header="形状ID" DisplayMemberBinding="{Binding Code}" Width="60" />
        <GridViewColumn Header="名称" CellTemplate="{StaticResource ExpandableTreeListViewItemCell}" />
        <GridViewColumn Header="功能组" DisplayMemberBinding="{Binding FunctionalGroup}" Width="60" />
        <GridViewColumn Header="功能元件" DisplayMemberBinding="{Binding FunctionalElement}" Width="120" />
        <GridViewColumn Header="物料号" DisplayMemberBinding="{Binding MaterialNo}" Width="120" />
        <GridViewColumn Header="数量" DisplayMemberBinding="{Binding Count}" Width="60" />
    </GridViewColumnCollection>

    <Style TargetType="{x:Type controls:TreeListViewItem}">
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeListViewItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter x:Name="PART_Header"
                                                  Content="{TemplateBinding Header}"
                                                  Columns="{StaticResource TreeListViewColumns}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:TreeListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TreeListView}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <GridViewHeaderRowPresenter Columns="{StaticResource TreeListViewColumns}"
                                                        DockPanel.Dock="Top" />
                            <Border BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>